name: Build and Deploy to Cloud Run

on:
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{secrets.GOOGLE_PROJECT}} # TODO: update Google Cloud project id
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REPOSITORY: proyecto-2 # TODO: update Artifact Registry repository name
  SERVICE: micro-web # TODO: update Cloud Run service name
  REGION: us-central1 # TODO: update Cloud Run service region

jobs:
  prodtests:
    name: prodtests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run test:prod

  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    needs: prodtests
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up gcloud Cloud SDK environment
        uses: google-github-actions/setup-gcloud@v0
        with:
            project_id: ${{secrets.GOOGLE_PROJECT}}
            service_account_key: ${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
            export_default_credentials: true

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
            registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev
            username: _json_key
            password: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:latest
          flags: '--allow-unauthenticated --max-instances=1 --port=80'
          # NOTE: You can also set env variables here:
            # env_vars: |
            #     NODE_ENV=production
            #     TOKEN_EXPIRE=6400

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}